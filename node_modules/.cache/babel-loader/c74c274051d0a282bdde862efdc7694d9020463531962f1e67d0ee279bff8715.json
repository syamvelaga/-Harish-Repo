{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { thunk } from 'redux-thunk';\n// import createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n//import rootSaga from './sagas/sagasFile'\n\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productRedcers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderPayReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : [];\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : null;\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\n\n// const middleware = [thunk]\n// const sagMiddleware = createSagaMiddleware()\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n// sagMiddleware.run(rootSaga)\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","cartReducer","orderCreateReducer","orderDetailsReducer","orderListMyReducer","orderPayReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","userInfoFromStorage","localStorage","getItem","JSON","parse","cartItemsFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","store"],"sources":["C:/Users/syamv/Desktop/test/totality.frontend/src/store.js"],"sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport {thunk} from 'redux-thunk'\r\n// import createSagaMiddleware from 'redux-saga'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n//import rootSaga from './sagas/sagasFile'\r\n\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productRedcers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n    orderCreateReducer, \r\n    orderDetailsReducer,\r\n     orderListMyReducer, \r\n     orderPayReducer, \r\n     orderListReducer,\r\n     orderDeliverReducer,\r\n    } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList:productListReducer,\r\n    productDetails:productDetailsReducer,\r\n    productDelete:productDeleteReducer,\r\n    productCreate:productCreateReducer,\r\n    productUpdate:productUpdateReducer,\r\n    productReviewCreate:productReviewCreateReducer,\r\n    productTopRated:productTopRatedReducer,\r\n    cart:cartReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile:userUpdateProfileReducer,\r\n    userList:userListReducer,\r\n    userDelete:userDeleteReducer,\r\n    userUpdate:userUpdateReducer,\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n    orderDeliver:orderDeliverReducer,\r\n    orderListMy:orderListMyReducer,\r\n    orderList:orderListReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):[]\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")?JSON.parse(localStorage.getItem(\"cartItems\")):null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")?JSON.parse(localStorage.getItem(\"shippingAddress\")):{}\r\n\r\nconst initialState = {\r\n    cart:{cartItems:cartItemsFromStorage, \r\n    shippingAddress:shippingAddressFromStorage\r\n    },\r\n    userLogin:{userInfo:userInfoFromStorage},\r\n\r\n}\r\n\r\n// const middleware = [thunk]\r\n// const sagMiddleware = createSagaMiddleware()\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunk)))\r\n// sagMiddleware.run(rootSaga)\r\nexport default store\r\n\r\n"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAO,OAAO;AACnE,SAAQC,KAAK,QAAO,aAAa;AACjC;AACA,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D;;AAEA,SAASC,kBAAkB,EAAEC,qBAAqB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,oBAAoB,EAAEC,0BAA0B,EAAEC,sBAAsB,QAAQ,2BAA2B;AAC3M,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,wBAAwB,EAAEC,eAAe,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,yBAAyB;AACpL,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SACIC,kBAAkB,EAClBC,mBAAmB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,gBAAgB,EAChBC,mBAAmB,QACb,0BAA0B;AAErC,MAAMC,OAAO,GAAGzB,eAAe,CAAC;EAC5B0B,WAAW,EAACtB,kBAAkB;EAC9BuB,cAAc,EAACtB,qBAAqB;EACpCuB,aAAa,EAACtB,oBAAoB;EAClCuB,aAAa,EAACtB,oBAAoB;EAClCuB,aAAa,EAACtB,oBAAoB;EAClCuB,mBAAmB,EAACtB,0BAA0B;EAC9CuB,eAAe,EAACtB,sBAAsB;EACtCuB,IAAI,EAACf,WAAW;EAChBgB,SAAS,EAACvB,gBAAgB;EAC1BwB,YAAY,EAACvB,mBAAmB;EAChCwB,WAAW,EAACvB,kBAAkB;EAC9BwB,iBAAiB,EAACvB,wBAAwB;EAC1CwB,QAAQ,EAACvB,eAAe;EACxBwB,UAAU,EAACvB,iBAAiB;EAC5BwB,UAAU,EAACvB,iBAAiB;EAC5BwB,WAAW,EAACtB,kBAAkB;EAC9BuB,YAAY,EAACtB,mBAAmB;EAChCuB,QAAQ,EAACrB,eAAe;EACxBsB,YAAY,EAACpB,mBAAmB;EAChCqB,WAAW,EAACxB,kBAAkB;EAC9ByB,SAAS,EAACvB;AACd,CAAC,CAAC;AAEF,MAAMwB,mBAAmB,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GAACC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAC,EAAE;AAE5G,MAAMG,oBAAoB,GAAGJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAACC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAC,IAAI;AAEjH,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAACC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GAAC,CAAC,CAAC;AAEjI,MAAMK,YAAY,GAAG;EACjBrB,IAAI,EAAC;IAACsB,SAAS,EAACH,oBAAoB;IACpCI,eAAe,EAACH;EAChB,CAAC;EACDnB,SAAS,EAAC;IAACuB,QAAQ,EAACV;EAAmB;AAE3C,CAAC;;AAED;AACA;AACA,MAAMW,KAAK,GAAG3D,WAAW,CAAC0B,OAAO,EAAE6B,YAAY,EAAEnD,mBAAmB,CAACF,eAAe,CAACC,KAAK,CAAC,CAAC,CAAC;AAC7F;AACA,eAAewD,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}